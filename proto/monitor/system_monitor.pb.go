// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.0
// source: monitor/system_monitor.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SubscriptionRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	IntervalSeconds uint32                 `protobuf:"varint,1,opt,name=interval_seconds,json=intervalSeconds,proto3" json:"interval_seconds,omitempty"` // N
	WindowSeconds   uint32                 `protobuf:"varint,2,opt,name=window_seconds,json=windowSeconds,proto3" json:"window_seconds,omitempty"`       // M
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SubscriptionRequest) Reset() {
	*x = SubscriptionRequest{}
	mi := &file_monitor_system_monitor_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscriptionRequest) ProtoMessage() {}

func (x *SubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_monitor_system_monitor_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscriptionRequest.ProtoReflect.Descriptor instead.
func (*SubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_monitor_system_monitor_proto_rawDescGZIP(), []int{0}
}

func (x *SubscriptionRequest) GetIntervalSeconds() uint32 {
	if x != nil {
		return x.IntervalSeconds
	}
	return 0
}

func (x *SubscriptionRequest) GetWindowSeconds() uint32 {
	if x != nil {
		return x.WindowSeconds
	}
	return 0
}

type SystemSnapshot struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	LoadAvg         *LoadAverage           `protobuf:"bytes,1,opt,name=load_avg,json=loadAvg,proto3" json:"load_avg,omitempty"`
	CpuUsage        *CpuUsage              `protobuf:"bytes,2,opt,name=cpu_usage,json=cpuUsage,proto3" json:"cpu_usage,omitempty"`
	DiskStats       []*DiskStats           `protobuf:"bytes,3,rep,name=disk_stats,json=diskStats,proto3" json:"disk_stats,omitempty"`
	FsUsage         []*FsUsage             `protobuf:"bytes,4,rep,name=fs_usage,json=fsUsage,proto3" json:"fs_usage,omitempty"`
	ProtocolTraffic []*ProtocolTraffic     `protobuf:"bytes,5,rep,name=protocol_traffic,json=protocolTraffic,proto3" json:"protocol_traffic,omitempty"`
	Connections     []*NetworkConnection   `protobuf:"bytes,6,rep,name=connections,proto3" json:"connections,omitempty"`
	TopTalkers      []*TopTalker           `protobuf:"bytes,7,rep,name=top_talkers,json=topTalkers,proto3" json:"top_talkers,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SystemSnapshot) Reset() {
	*x = SystemSnapshot{}
	mi := &file_monitor_system_monitor_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemSnapshot) ProtoMessage() {}

func (x *SystemSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_monitor_system_monitor_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemSnapshot.ProtoReflect.Descriptor instead.
func (*SystemSnapshot) Descriptor() ([]byte, []int) {
	return file_monitor_system_monitor_proto_rawDescGZIP(), []int{1}
}

func (x *SystemSnapshot) GetLoadAvg() *LoadAverage {
	if x != nil {
		return x.LoadAvg
	}
	return nil
}

func (x *SystemSnapshot) GetCpuUsage() *CpuUsage {
	if x != nil {
		return x.CpuUsage
	}
	return nil
}

func (x *SystemSnapshot) GetDiskStats() []*DiskStats {
	if x != nil {
		return x.DiskStats
	}
	return nil
}

func (x *SystemSnapshot) GetFsUsage() []*FsUsage {
	if x != nil {
		return x.FsUsage
	}
	return nil
}

func (x *SystemSnapshot) GetProtocolTraffic() []*ProtocolTraffic {
	if x != nil {
		return x.ProtocolTraffic
	}
	return nil
}

func (x *SystemSnapshot) GetConnections() []*NetworkConnection {
	if x != nil {
		return x.Connections
	}
	return nil
}

func (x *SystemSnapshot) GetTopTalkers() []*TopTalker {
	if x != nil {
		return x.TopTalkers
	}
	return nil
}

type LoadAverage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OneMin        float64                `protobuf:"fixed64,1,opt,name=one_min,json=oneMin,proto3" json:"one_min,omitempty"`
	FiveMins      float64                `protobuf:"fixed64,2,opt,name=five_mins,json=fiveMins,proto3" json:"five_mins,omitempty"`
	FifteenMins   float64                `protobuf:"fixed64,3,opt,name=fifteen_mins,json=fifteenMins,proto3" json:"fifteen_mins,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoadAverage) Reset() {
	*x = LoadAverage{}
	mi := &file_monitor_system_monitor_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoadAverage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadAverage) ProtoMessage() {}

func (x *LoadAverage) ProtoReflect() protoreflect.Message {
	mi := &file_monitor_system_monitor_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadAverage.ProtoReflect.Descriptor instead.
func (*LoadAverage) Descriptor() ([]byte, []int) {
	return file_monitor_system_monitor_proto_rawDescGZIP(), []int{2}
}

func (x *LoadAverage) GetOneMin() float64 {
	if x != nil {
		return x.OneMin
	}
	return 0
}

func (x *LoadAverage) GetFiveMins() float64 {
	if x != nil {
		return x.FiveMins
	}
	return 0
}

func (x *LoadAverage) GetFifteenMins() float64 {
	if x != nil {
		return x.FifteenMins
	}
	return 0
}

type CpuUsage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          float64                `protobuf:"fixed64,1,opt,name=user,proto3" json:"user,omitempty"`
	System        float64                `protobuf:"fixed64,2,opt,name=system,proto3" json:"system,omitempty"`
	Idle          float64                `protobuf:"fixed64,3,opt,name=idle,proto3" json:"idle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CpuUsage) Reset() {
	*x = CpuUsage{}
	mi := &file_monitor_system_monitor_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CpuUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CpuUsage) ProtoMessage() {}

func (x *CpuUsage) ProtoReflect() protoreflect.Message {
	mi := &file_monitor_system_monitor_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CpuUsage.ProtoReflect.Descriptor instead.
func (*CpuUsage) Descriptor() ([]byte, []int) {
	return file_monitor_system_monitor_proto_rawDescGZIP(), []int{3}
}

func (x *CpuUsage) GetUser() float64 {
	if x != nil {
		return x.User
	}
	return 0
}

func (x *CpuUsage) GetSystem() float64 {
	if x != nil {
		return x.System
	}
	return 0
}

func (x *CpuUsage) GetIdle() float64 {
	if x != nil {
		return x.Idle
	}
	return 0
}

type DiskStats struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Device        string                 `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
	Tps           float64                `protobuf:"fixed64,2,opt,name=tps,proto3" json:"tps,omitempty"`
	KbPerSec      float64                `protobuf:"fixed64,3,opt,name=kb_per_sec,json=kbPerSec,proto3" json:"kb_per_sec,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DiskStats) Reset() {
	*x = DiskStats{}
	mi := &file_monitor_system_monitor_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiskStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiskStats) ProtoMessage() {}

func (x *DiskStats) ProtoReflect() protoreflect.Message {
	mi := &file_monitor_system_monitor_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiskStats.ProtoReflect.Descriptor instead.
func (*DiskStats) Descriptor() ([]byte, []int) {
	return file_monitor_system_monitor_proto_rawDescGZIP(), []int{4}
}

func (x *DiskStats) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *DiskStats) GetTps() float64 {
	if x != nil {
		return x.Tps
	}
	return 0
}

func (x *DiskStats) GetKbPerSec() float64 {
	if x != nil {
		return x.KbPerSec
	}
	return 0
}

type FsUsage struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	MountPoint        string                 `protobuf:"bytes,1,opt,name=mount_point,json=mountPoint,proto3" json:"mount_point,omitempty"`
	TotalMb           uint64                 `protobuf:"varint,2,opt,name=total_mb,json=totalMb,proto3" json:"total_mb,omitempty"`
	UsedMb            uint64                 `protobuf:"varint,3,opt,name=used_mb,json=usedMb,proto3" json:"used_mb,omitempty"`
	UsedPercent       float64                `protobuf:"fixed64,4,opt,name=used_percent,json=usedPercent,proto3" json:"used_percent,omitempty"`
	InodesTotal       uint64                 `protobuf:"varint,5,opt,name=inodes_total,json=inodesTotal,proto3" json:"inodes_total,omitempty"`
	InodesUsed        uint64                 `protobuf:"varint,6,opt,name=inodes_used,json=inodesUsed,proto3" json:"inodes_used,omitempty"`
	InodesUsedPercent float64                `protobuf:"fixed64,7,opt,name=inodes_used_percent,json=inodesUsedPercent,proto3" json:"inodes_used_percent,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *FsUsage) Reset() {
	*x = FsUsage{}
	mi := &file_monitor_system_monitor_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FsUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FsUsage) ProtoMessage() {}

func (x *FsUsage) ProtoReflect() protoreflect.Message {
	mi := &file_monitor_system_monitor_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FsUsage.ProtoReflect.Descriptor instead.
func (*FsUsage) Descriptor() ([]byte, []int) {
	return file_monitor_system_monitor_proto_rawDescGZIP(), []int{5}
}

func (x *FsUsage) GetMountPoint() string {
	if x != nil {
		return x.MountPoint
	}
	return ""
}

func (x *FsUsage) GetTotalMb() uint64 {
	if x != nil {
		return x.TotalMb
	}
	return 0
}

func (x *FsUsage) GetUsedMb() uint64 {
	if x != nil {
		return x.UsedMb
	}
	return 0
}

func (x *FsUsage) GetUsedPercent() float64 {
	if x != nil {
		return x.UsedPercent
	}
	return 0
}

func (x *FsUsage) GetInodesTotal() uint64 {
	if x != nil {
		return x.InodesTotal
	}
	return 0
}

func (x *FsUsage) GetInodesUsed() uint64 {
	if x != nil {
		return x.InodesUsed
	}
	return 0
}

func (x *FsUsage) GetInodesUsedPercent() float64 {
	if x != nil {
		return x.InodesUsedPercent
	}
	return 0
}

type ProtocolTraffic struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Protocol      string                 `protobuf:"bytes,1,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Bytes         uint64                 `protobuf:"varint,2,opt,name=bytes,proto3" json:"bytes,omitempty"`
	Percent       float64                `protobuf:"fixed64,3,opt,name=percent,proto3" json:"percent,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProtocolTraffic) Reset() {
	*x = ProtocolTraffic{}
	mi := &file_monitor_system_monitor_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProtocolTraffic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtocolTraffic) ProtoMessage() {}

func (x *ProtocolTraffic) ProtoReflect() protoreflect.Message {
	mi := &file_monitor_system_monitor_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtocolTraffic.ProtoReflect.Descriptor instead.
func (*ProtocolTraffic) Descriptor() ([]byte, []int) {
	return file_monitor_system_monitor_proto_rawDescGZIP(), []int{6}
}

func (x *ProtocolTraffic) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *ProtocolTraffic) GetBytes() uint64 {
	if x != nil {
		return x.Bytes
	}
	return 0
}

func (x *ProtocolTraffic) GetPercent() float64 {
	if x != nil {
		return x.Percent
	}
	return 0
}

type NetworkConnection struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Command       string                 `protobuf:"bytes,1,opt,name=command,proto3" json:"command,omitempty"`
	Pid           int32                  `protobuf:"varint,2,opt,name=pid,proto3" json:"pid,omitempty"`
	User          string                 `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	Protocol      string                 `protobuf:"bytes,4,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Port          int32                  `protobuf:"varint,5,opt,name=port,proto3" json:"port,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkConnection) Reset() {
	*x = NetworkConnection{}
	mi := &file_monitor_system_monitor_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkConnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkConnection) ProtoMessage() {}

func (x *NetworkConnection) ProtoReflect() protoreflect.Message {
	mi := &file_monitor_system_monitor_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkConnection.ProtoReflect.Descriptor instead.
func (*NetworkConnection) Descriptor() ([]byte, []int) {
	return file_monitor_system_monitor_proto_rawDescGZIP(), []int{7}
}

func (x *NetworkConnection) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *NetworkConnection) GetPid() int32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *NetworkConnection) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *NetworkConnection) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *NetworkConnection) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type TopTalker struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Src           string                 `protobuf:"bytes,1,opt,name=src,proto3" json:"src,omitempty"`
	Dst           string                 `protobuf:"bytes,2,opt,name=dst,proto3" json:"dst,omitempty"`
	Protocol      string                 `protobuf:"bytes,3,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Bps           uint64                 `protobuf:"varint,4,opt,name=bps,proto3" json:"bps,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TopTalker) Reset() {
	*x = TopTalker{}
	mi := &file_monitor_system_monitor_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TopTalker) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopTalker) ProtoMessage() {}

func (x *TopTalker) ProtoReflect() protoreflect.Message {
	mi := &file_monitor_system_monitor_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopTalker.ProtoReflect.Descriptor instead.
func (*TopTalker) Descriptor() ([]byte, []int) {
	return file_monitor_system_monitor_proto_rawDescGZIP(), []int{8}
}

func (x *TopTalker) GetSrc() string {
	if x != nil {
		return x.Src
	}
	return ""
}

func (x *TopTalker) GetDst() string {
	if x != nil {
		return x.Dst
	}
	return ""
}

func (x *TopTalker) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *TopTalker) GetBps() uint64 {
	if x != nil {
		return x.Bps
	}
	return 0
}

var File_monitor_system_monitor_proto protoreflect.FileDescriptor

const file_monitor_system_monitor_proto_rawDesc = "" +
	"\n" +
	"\x1cmonitor/system_monitor.proto\x12\rsystemmonitor\"g\n" +
	"\x13SubscriptionRequest\x12)\n" +
	"\x10interval_seconds\x18\x01 \x01(\rR\x0fintervalSeconds\x12%\n" +
	"\x0ewindow_seconds\x18\x02 \x01(\rR\rwindowSeconds\"\xb3\x03\n" +
	"\x0eSystemSnapshot\x125\n" +
	"\bload_avg\x18\x01 \x01(\v2\x1a.systemmonitor.LoadAverageR\aloadAvg\x124\n" +
	"\tcpu_usage\x18\x02 \x01(\v2\x17.systemmonitor.CpuUsageR\bcpuUsage\x127\n" +
	"\n" +
	"disk_stats\x18\x03 \x03(\v2\x18.systemmonitor.DiskStatsR\tdiskStats\x121\n" +
	"\bfs_usage\x18\x04 \x03(\v2\x16.systemmonitor.FsUsageR\afsUsage\x12I\n" +
	"\x10protocol_traffic\x18\x05 \x03(\v2\x1e.systemmonitor.ProtocolTrafficR\x0fprotocolTraffic\x12B\n" +
	"\vconnections\x18\x06 \x03(\v2 .systemmonitor.NetworkConnectionR\vconnections\x129\n" +
	"\vtop_talkers\x18\a \x03(\v2\x18.systemmonitor.TopTalkerR\n" +
	"topTalkers\"f\n" +
	"\vLoadAverage\x12\x17\n" +
	"\aone_min\x18\x01 \x01(\x01R\x06oneMin\x12\x1b\n" +
	"\tfive_mins\x18\x02 \x01(\x01R\bfiveMins\x12!\n" +
	"\ffifteen_mins\x18\x03 \x01(\x01R\vfifteenMins\"J\n" +
	"\bCpuUsage\x12\x12\n" +
	"\x04user\x18\x01 \x01(\x01R\x04user\x12\x16\n" +
	"\x06system\x18\x02 \x01(\x01R\x06system\x12\x12\n" +
	"\x04idle\x18\x03 \x01(\x01R\x04idle\"S\n" +
	"\tDiskStats\x12\x16\n" +
	"\x06device\x18\x01 \x01(\tR\x06device\x12\x10\n" +
	"\x03tps\x18\x02 \x01(\x01R\x03tps\x12\x1c\n" +
	"\n" +
	"kb_per_sec\x18\x03 \x01(\x01R\bkbPerSec\"\xf5\x01\n" +
	"\aFsUsage\x12\x1f\n" +
	"\vmount_point\x18\x01 \x01(\tR\n" +
	"mountPoint\x12\x19\n" +
	"\btotal_mb\x18\x02 \x01(\x04R\atotalMb\x12\x17\n" +
	"\aused_mb\x18\x03 \x01(\x04R\x06usedMb\x12!\n" +
	"\fused_percent\x18\x04 \x01(\x01R\vusedPercent\x12!\n" +
	"\finodes_total\x18\x05 \x01(\x04R\vinodesTotal\x12\x1f\n" +
	"\vinodes_used\x18\x06 \x01(\x04R\n" +
	"inodesUsed\x12.\n" +
	"\x13inodes_used_percent\x18\a \x01(\x01R\x11inodesUsedPercent\"]\n" +
	"\x0fProtocolTraffic\x12\x1a\n" +
	"\bprotocol\x18\x01 \x01(\tR\bprotocol\x12\x14\n" +
	"\x05bytes\x18\x02 \x01(\x04R\x05bytes\x12\x18\n" +
	"\apercent\x18\x03 \x01(\x01R\apercent\"\x83\x01\n" +
	"\x11NetworkConnection\x12\x18\n" +
	"\acommand\x18\x01 \x01(\tR\acommand\x12\x10\n" +
	"\x03pid\x18\x02 \x01(\x05R\x03pid\x12\x12\n" +
	"\x04user\x18\x03 \x01(\tR\x04user\x12\x1a\n" +
	"\bprotocol\x18\x04 \x01(\tR\bprotocol\x12\x12\n" +
	"\x04port\x18\x05 \x01(\x05R\x04port\"]\n" +
	"\tTopTalker\x12\x10\n" +
	"\x03src\x18\x01 \x01(\tR\x03src\x12\x10\n" +
	"\x03dst\x18\x02 \x01(\tR\x03dst\x12\x1a\n" +
	"\bprotocol\x18\x03 \x01(\tR\bprotocol\x12\x10\n" +
	"\x03bps\x18\x04 \x01(\x04R\x03bps2a\n" +
	"\rSystemMonitor\x12P\n" +
	"\tSubscribe\x12\".systemmonitor.SubscriptionRequest\x1a\x1d.systemmonitor.SystemSnapshot0\x01B1Z/github.com/dimryb/system-monitor/internal/protob\x06proto3"

var (
	file_monitor_system_monitor_proto_rawDescOnce sync.Once
	file_monitor_system_monitor_proto_rawDescData []byte
)

func file_monitor_system_monitor_proto_rawDescGZIP() []byte {
	file_monitor_system_monitor_proto_rawDescOnce.Do(func() {
		file_monitor_system_monitor_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_monitor_system_monitor_proto_rawDesc), len(file_monitor_system_monitor_proto_rawDesc)))
	})
	return file_monitor_system_monitor_proto_rawDescData
}

var file_monitor_system_monitor_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_monitor_system_monitor_proto_goTypes = []any{
	(*SubscriptionRequest)(nil), // 0: systemmonitor.SubscriptionRequest
	(*SystemSnapshot)(nil),      // 1: systemmonitor.SystemSnapshot
	(*LoadAverage)(nil),         // 2: systemmonitor.LoadAverage
	(*CpuUsage)(nil),            // 3: systemmonitor.CpuUsage
	(*DiskStats)(nil),           // 4: systemmonitor.DiskStats
	(*FsUsage)(nil),             // 5: systemmonitor.FsUsage
	(*ProtocolTraffic)(nil),     // 6: systemmonitor.ProtocolTraffic
	(*NetworkConnection)(nil),   // 7: systemmonitor.NetworkConnection
	(*TopTalker)(nil),           // 8: systemmonitor.TopTalker
}
var file_monitor_system_monitor_proto_depIdxs = []int32{
	2, // 0: systemmonitor.SystemSnapshot.load_avg:type_name -> systemmonitor.LoadAverage
	3, // 1: systemmonitor.SystemSnapshot.cpu_usage:type_name -> systemmonitor.CpuUsage
	4, // 2: systemmonitor.SystemSnapshot.disk_stats:type_name -> systemmonitor.DiskStats
	5, // 3: systemmonitor.SystemSnapshot.fs_usage:type_name -> systemmonitor.FsUsage
	6, // 4: systemmonitor.SystemSnapshot.protocol_traffic:type_name -> systemmonitor.ProtocolTraffic
	7, // 5: systemmonitor.SystemSnapshot.connections:type_name -> systemmonitor.NetworkConnection
	8, // 6: systemmonitor.SystemSnapshot.top_talkers:type_name -> systemmonitor.TopTalker
	0, // 7: systemmonitor.SystemMonitor.Subscribe:input_type -> systemmonitor.SubscriptionRequest
	1, // 8: systemmonitor.SystemMonitor.Subscribe:output_type -> systemmonitor.SystemSnapshot
	8, // [8:9] is the sub-list for method output_type
	7, // [7:8] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_monitor_system_monitor_proto_init() }
func file_monitor_system_monitor_proto_init() {
	if File_monitor_system_monitor_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_monitor_system_monitor_proto_rawDesc), len(file_monitor_system_monitor_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_monitor_system_monitor_proto_goTypes,
		DependencyIndexes: file_monitor_system_monitor_proto_depIdxs,
		MessageInfos:      file_monitor_system_monitor_proto_msgTypes,
	}.Build()
	File_monitor_system_monitor_proto = out.File
	file_monitor_system_monitor_proto_goTypes = nil
	file_monitor_system_monitor_proto_depIdxs = nil
}
